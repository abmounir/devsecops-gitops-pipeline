# gh actions ci yaml to test and build docker
on:
  push:
    branches : [master, develop, feature/*]
    # tags:
    #   - "v*.*.*" 

env:
  # image tag: first 5 chars of the github sha hash 
  IMAGE_TAG: ${{ github.sha }}

jobs:
  # unit_tests:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     # setup python
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     - run: |
  #         pip install -r requirements.txt
  #         pip install pytest
  #         pytest fastapi_tests.py
  # sonarcloud:
  #   name: SonarCloud
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         projectBaseDir: .
  build_and_dast_tests:
    permissions: write-all
    # needs: [unit_tests, sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: build docker image
      - run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:$IMAGE_TAG .
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          # docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:$IMAGE_TAG
      - name: run the docker image
        run: |
          docker run -d -p 1097:1097 ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:$IMAGE_TAG
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://localhost:1097/v1/books'
          allow_issue_writing: true
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload ZAP Scan Results
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: report.html

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:$IMAGE_TAG
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: publish docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:$IMAGE_TAG

